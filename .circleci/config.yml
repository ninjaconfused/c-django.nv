jobs:
  build:
    docker:
      - image: python:3.6                   # similar to "image" in GitLab
    steps:
      - checkout
      - run: |                              # similar to "script" in GitLab
          pip install -r requirements.txt
          python manage.py check

  test:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: |
          pip install -r requirements.txt
          python manage.py test taskManager
  
  odc-backend:
    machine: true
    steps: 
      - checkout
     
      - run: chmod +x ./run-depcheck.sh && ./run-depcheck.sh
      
      - store_artifacts:
          path: reports/dependency-check-report.csv
          destination: depcheck-artifact
          when: always

  oast-frontend:
    machine: true
    steps:
      - checkout

      - run:
          command: docker run --rm -v $(pwd):/src -w /src hysnsec/retire --outputformat json --outputpath retirejs-output.json --severity high
          when: on_fail             # Even if the job fails, continue to the next stages

      - store_artifacts:
          path: retirejs-output.json
          destination: retirejs-artifact
          when: always

  oast-snyk:
    docker:
      - image: node:latest
    steps:
      - checkout

      - run: 
          command: |
            wget -O snyk https://github.com/snyk/snyk/releases/download/v1.388.0/snyk-linux
            chmod +x snyk
            mv snyk /usr/local/bin/
            npm install
            snyk test --json > snyk-results.json
          when: on_fail

      - store_artifacts:
          path: snyk-results.json
          destination: snyk-artifact
          when: always
  
  secret_scanning:
    machine: true
    steps:
      - checkout
      
      - run: docker run --rm -v $(pwd):/src hysnsec/trufflehog file:///src --json > trufflehog-output.json
      
      - store_artifacts:
          path: trufflehog-output.json
          destination: trufflehog-artifact
            
  integration:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run:
          command: |
            echo "This is an integration step"
            exit 1
          when: on_fail         # Even if the job fails, continue to the next stages

  prod:
    docker:
      - image: python:3.6
    steps:
      - checkout
      - run: echo "This is a deploy step."

workflows:
  version: 2
  django:
    jobs:
      - build
      - test:
          requires:
            - build
      - odc-backend:
          requires:
            - test
      - oast-frontend:
          requires:
            - test
      - oast-snyk:
          requires:
            - test
      - secret_scanning:
          requires:
            - test
      - integration:
          requires:
            - odc-backend
            - oast-frontend
            - oast-snyk
            - secret_scanning
      - prod:
          type: approval
          requires:
            - integration
